version: '3.8'

services:
  db:
    image: postgres:14
    ports:
      - "3456:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d:ro
    tmpfs:
      - /var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "logging_collector=on", "-c", "log_statement=all"]

  python_api:
    build: 
      context: ./python_app
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:password@db:5432/python_tododb
      - JWT_SECRET_KEY=your_jwt_secret_key_change_in_production
      - FLASK_APP=app.py
      - FLASK_DEBUG=1
      - PORT=5002
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  node_api:
    build:
      context: ./node_app
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - JWT_SECRET=your_jwt_secret_key_change_in_production
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - API_URL=https://node.ist-challenge.i-skip.com/
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=node_tododb
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    
  java_api:
    build: 
      context: ./java_app
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/java_tododb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - JWT_SECRET=your_jwt_secret_key_change_in_production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - PYTHONUNBUFFERED=1
      # Python test environment
      - DATABASE_URL=postgresql://postgres:password@db:5432/python_tododb_test
      # Java test environment
      - SPRING_PROFILES_ACTIVE=test
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/java_tododb_test
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      # Node test environment
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=node_tododb_test
      # SonarQube
      - SONAR_TOKEN=${SONAR_TOKEN}
      - SONAR_HOST_URL=${SONAR_HOST_URL}
    tmpfs:
      - /app/test-results
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge